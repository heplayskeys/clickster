{"version":3,"sources":["components/Navbar.js","components/Header.js","components/GameBoard.js","components/Footer.js","App.js","index.js"],"names":["Navbar","props","status","correct","gameStatus","react_default","a","createElement","className","style","color","fontWeight","textShadow","fontSize","window","screen","width","type","href","score","topScore","Header","GameBoard","data-id","id","onClick","handleClick","src","image","alt","Footer","opacity","App","state","tiles","chosen","win","_this","includes","setState","nowChosen","shuffleTiles","sort","Math","random","push","checkScore","_this2","this","tileSet","map","tile","components_GameBoard","Object","assign","key","background","components_Navbar","components_Header","components_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.eb9f3519.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n\n    let status;\n\n    switch (props.correct) {\n\n        case true:\n            if (props.gameStatus) {\n                status = <li className=\"feedback text-center\" style={{color: \"darkgreen\", fontWeight: \"bolder\", textShadow: \"0 8px 6px -6px #000000\"}}>\n                    <p>You did it! Great Job!</p>\n                    <p style={{fontSize: \"12px\"}}>Click an Image to Play Again.</p>\n                </li>\n            }\n            else {\n                status = <li className=\"feedback text-center\" style={{color: \"darkgreen\", fontWeight: \"bolder\"}}>Correct! Keep it Up!</li>\n            }\n        break;\n\n        case false:\n            status = <li className=\"feedback text-center\" style={{color: \"darkred\", fontWeight: \"bold\"}}>Game Over! Try Again!</li>\n        break;\n\n        default:\n            status = <li className=\"feedback text-center\">{window.screen.width > 768 ? \"Click an Image to Get Started!\" : \"Touch an Image to Start!\"}</li>\n        break;\n    }\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-light\">\n            <ul type=\"none\">\n                <li className=\"brand h1 text-white text-center\"><a href=\"http://heplayskeys.github.io/click-apes\">Clickster</a></li>\n                {status}\n                <li className=\"text-center\">Score: <span className=\"playerScore\">{props.score}</span>&nbsp;&nbsp;|&nbsp;&nbsp;Top Score: <span className=\"topScore\">{props.topScore}</span></li>\n            </ul>\n            </nav>\n        </div>\n\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n\n    if (window.screen.width <= 480) {\n\n    }\n\n    return (\n        <div>\n            <header className=\"header\">\n                <div className=\"jumbotron jumbotron-fluid img-thumbnail\">\n                    <div className=\"container\">\n                        <h1>Clickster!</h1>\n                        <p className=\"lead\">{window.screen.width > 768 ? \"Click on an image to earn points, but don't click on any more than once!\" : \"Touch an image to earn points, but don't touch on any more than once!\"}</p>\n                    </div>\n                </div>\n            </header>\n            <div className=\"headerFoot\"></div>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction GameBoard(props) {\n\n    return (\n\n        <li data-id={props.id} className=\"gameTile\" onClick={() => props.handleClick(props.id)}>\n            <img className=\"img-thumbnail\" src={props.image} alt=\"gorilla\" />\n        </li>\n\n    );\n}\n\nexport default GameBoard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n\n    return (\n        <div>\n            <footer className=\"footer\"></footer>\n            <div className=\"footerFoot\">\n                <section className=\"footBrand\">Clickster <img src=\"./favicon.png\" alt=\"Clickster Icon\" style={{opacity: 0.5}}/></section>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport GameBoard from \"./components/GameBoard\";\nimport Footer from \"./components/Footer\";\nimport tiles from \"./tiles.json\";\n\nclass App extends React.Component {\n\n  state = {\n    tiles: tiles,\n    score: 0,\n    topScore: 0,\n    chosen: [],\n    correct: null,\n    win: false\n  }\n\n  handleClick = (id) => {\n    \n    if (!this.state.chosen.includes(id)) {\n\n      let nowChosen = this.state.chosen;\n      let shuffleTiles = this.state.tiles.sort(() => 0.5 - Math.random());\n      let score = this.state.score + 1;\n      nowChosen.push(id);\n\n      this.setState({\n        tiles: shuffleTiles,\n        score: score,\n        chosen: nowChosen,\n        correct: true\n      }, () => {\n        this.checkScore();\n      });\n    }\n    else {\n\n      let nowChosen = [];\n      let score = 0;\n      let topScore;\n      \n      if (this.state.score > this.state.topScore) {\n        topScore = this.state.score;\n      }\n      else {\n        topScore = this.state.topScore;\n      }\n      \n      this.setState({\n        tiles: tiles,\n        score: score,\n        topScore: topScore,\n        chosen: nowChosen,\n        correct: false\n      });\n    }\n  }\n\n  checkScore = () => {\n    if (this.state.score === 12) {\n      this.setState({win: true, chosen: [], score: 0, topScore: this.state.score});\n    }\n    else {\n      this.setState({win: false});\n    }\n  }\n\n  render() {\n\n    let tileSet = this.state.tiles.map((tile) => <GameBoard key={tile.id} {...tile} handleClick={this.handleClick} />)\n\n    return (\n      <div style={{background: 'url(\"https://www.toptal.com/designers/subtlepatterns/patterns/debut_light.png\")'}}>\n        <Navbar correct={this.state.correct} score={this.state.score} topScore={this.state.topScore} gameStatus={this.state.win}/>\n        <Header />\n        <div className=\"container\">\n          <ul className=\"tileSet text-center\">\n            {tileSet}\n          </ul>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}