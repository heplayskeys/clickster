{"version":3,"sources":["components/Navbar.js","components/Header.js","components/GameBoard.js","components/Footer.js","App.js","index.js"],"names":["Navbar","props","status","correct","gameStatus","react_default","a","createElement","className","style","color","fontWeight","textShadow","fontSize","isPlaying","window","screen","width","background","type","href","score","topScore","Header","GameBoard","id","concat","onClick","handleClick","src","image","alt","Footer","opacity","App","state","tiles","chosen","win","_this","includes","document","querySelector","classList","add","setState","setTimeout","visibility","querySelectorAll","length","forEach","item","remove","nowChosen","shuffleTiles","sort","Math","random","push","checkScore","_this2","this","tileSet","map","tile","components_GameBoard","Object","assign","key","components_Navbar","components_Header","components_Footer","React","Component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.2bdae942.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n\n    let status;\n\n    switch (props.correct) {\n\n        case true:\n            if (props.gameStatus) {\n                status = <li className=\"feedback text-center\" style={{color: \"darkgreen\", fontWeight: \"bolder\", textShadow: \"0 8px 6px -6px #000000\"}}>\n                    <p>You did it! Great Job!</p>\n                    <p style={{fontSize: \"12px\"}}>Click an Image to Play Again.</p>\n                </li>\n            }\n            else {\n                status = <li className=\"feedback text-center\" style={{color: \"darkgreen\", fontWeight: \"bolder\"}}>Correct! Keep it Up!</li>\n            }\n        break;\n\n        case false:\n        status = <li className=\"feedback text-center\" style={{color: \"#fff\", fontWeight: \"bold\"}}>{!props.isPlaying ? \"Game Over!\" : window.screen.width > 768 ? \"Click an Image to Try Again!\" : \"Touch an Image to Try Again!\"}</li>\n        break;\n\n        default:\n            status = <li className=\"feedback text-center\">{window.screen.width > 768 ? \"Click an Image to Get Started!\" : \"Touch an Image to Start!\"}</li>\n        break;\n    }\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-light\" style={props.correct === false ? {background: \"#dc3545\"} : null}>\n            <ul type=\"none\">\n                <li className=\"brand h1 text-white text-center\"><a href=\"http://heplayskeys.github.io/click-apes\">Clickster</a></li>\n                {status}\n                <li className=\"text-center\">Score: <span className=\"playerScore\">{props.score}</span>&nbsp;&nbsp;|&nbsp;&nbsp;Top Score: <span className=\"topScore\">{props.topScore}</span></li>\n            </ul>\n            </nav>\n        </div>\n\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n\n    if (window.screen.width <= 480) {\n\n    }\n\n    return (\n        <div>\n            <header className=\"header\">\n                <div className=\"jumbotron jumbotron-fluid img-thumbnail\">\n                    <div className=\"container\">\n                        <h1>Clickster!</h1>\n                        <p className=\"lead\">{window.screen.width > 768 ? \"Click on an image to earn points, but don't click on any more than once!\" : \"Touch an image to earn points, but don't touch any more than once!\"}</p>\n                    </div>\n                </div>\n            </header>\n            <div className=\"headerFoot\" style={props.correct === false ? {background: \"#dc3545\"} : null}></div>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction GameBoard(props) {\n\n    return (\n\n        <li id={`tile${props.id}`} className=\"gameTile\" onClick={() => props.handleClick(props.id)}>\n            <img className=\"img-thumbnail\" src={props.image} alt=\"gorilla\" />\n        </li>\n\n    );\n}\n\nexport default GameBoard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer(props) {\n\n    return (\n        <div>\n            <footer className=\"footer\" style={props.correct === false ? {background: \"#dc3545\"} : null}></footer>\n            <div className=\"footerFoot\">\n                <section className=\"footBrand\" style={props.correct === false ? {background: \"#dc3545\"} : null}>Clickster <img src=\"./favicon.png\" alt=\"Clickster Icon\" style={{opacity: 0.5}}/></section>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport GameBoard from \"./components/GameBoard\";\nimport Footer from \"./components/Footer\";\nimport tiles from \"./tiles.json\";\n\nclass App extends React.Component {\n\n  state = {\n    tiles: tiles,\n    score: 0,\n    topScore: 0,\n    chosen: [],\n    correct: null,\n    win: false,\n    isPlaying: true\n  }\n\n  handleClick = (id) => {\n    \n    if (this.state.isPlaying) {\n\n      if (!this.state.chosen.includes(id)) {\n  \n        let tiles = document.querySelectorAll(\".tileSet li\");\n  \n        if (this.state.chosen.length === 0) {\n          tiles.forEach(item => {\n            item.classList.remove(\"hinge\")\n            item.style.visibility = \"visible\";\n          });\n        }\n  \n        let nowChosen = this.state.chosen;\n        let shuffleTiles = this.state.tiles.sort(() => 0.5 - Math.random());\n        let score = this.state.score + 1;\n        nowChosen.push(id);\n  \n        this.setState({\n          tiles: shuffleTiles,\n          score: score,\n          chosen: nowChosen,\n          correct: true\n        }, () => {\n          this.checkScore();\n        });\n      }\n      else {\n  \n        let nowChosen = [];\n        let score = 0;\n        let topScore;\n  \n        document.querySelector(`#tile${id}`).classList.add(\"hinge\");\n        // document.querySelector(`#tryAgain`).style.visibility = \"none\";\n        this.setState({isPlaying: false});\n\n        setTimeout(() => {\n          document.querySelector(`#tile${id}`).style.visibility = \"hidden\";\n        }, 2000);\n\n        setTimeout(() => {\n          // document.querySelector(`#tile${id}`).style.visibility = \"visible\";\n          // document.querySelector(`#tryAgain`).style.visibility = \"visible\";\n          this.setState({isPlaying: true});\n        }, 4000);\n        \n        if (this.state.score > this.state.topScore) {\n          topScore = this.state.score;\n        }\n        else {\n          topScore = this.state.topScore;\n        }\n        \n        this.setState({\n          tiles: tiles,\n          score: score,\n          topScore: topScore,\n          chosen: nowChosen,\n          correct: false\n        });\n      }\n    }\n  }\n\n  checkScore = () => {\n    if (this.state.score === 12) {\n      this.setState({win: true, chosen: [], score: 0, topScore: this.state.score});\n    }\n    else {\n      this.setState({win: false});\n    }\n  }\n\n  render() {\n\n    let tileSet = this.state.tiles.map((tile) => <GameBoard className=\"animated\" key={tile.id} {...tile} handleClick={this.handleClick} />)\n\n    return (\n      <div style={{background: 'url(\"https://www.toptal.com/designers/subtlepatterns/patterns/debut_light.png\")'}}>\n        <Navbar correct={this.state.correct} score={this.state.score} topScore={this.state.topScore} gameStatus={this.state.win} isPlaying={this.state.isPlaying} />\n        <Header correct={this.state.correct} />\n          <div className=\"container\">\n            <ul className=\"tileSet text-center\">\n              {tileSet}\n            </ul>\n        </div>\n        <Footer correct={this.state.correct} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}